/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

import { SerializedEditorState } from "@payloadcms/richtext-lexical/lexical";
import { RichTextAdapter, UploadCollectionSlug } from "payload";

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}

export interface Home {
  banner: {
    title: string;
    description: SerializedEditorState;
    backgroundImage: Media;
    primaryCTA: {
      text: string;
      link: string;
    };
    secondaryCTA: {
      text: string;
      link: string;
    };
  };
  advantages: {
    title: string;
    description: SerializedEditorState;
    features: {
      title: string;
      description: SerializedEditorState;
      icon: Media;
    }[];
  }
  therapySection: {
    title: string;
    description: SerializedEditorState;
    therapies: {
      title: string;
      description: SerializedEditorState;
      image: Media;
      link: string;
    }[];
  };
}

export interface Therapies {
  banner: {
    title: string;
    description: SerializedEditorState;
    image: Media;
  };
  ourApproach: {
    title: string;
    description: SerializedEditorState;
    primaryCTA: {
      text: string;
      link: string;
    };
    secondaryCTA: {
      text: string;
      link: string;
    };
  };
  therapies: {
    title: string
    description: SerializedEditorState;
    primaryCTA: {
      text: string;
      link: string;
    };
    secondaryCTA: {
      text: string;
      link: string;
    };
    image1: Media;
    image2: Media;
    caption: string;
  }[];
}
export interface About {
  banner: {
    title: string;
    description: SerializedEditorState;
    backgroundImage: Media;
  };
  ourMission: {
    title: string;
    description: SerializedEditorState;
    missionValues: {
      title: string;
      description: SerializedEditorState;
      image: Media;
    }[];
    SISTProcess: {
      title: string;
      description: SerializedEditorState;
      image: Media;
      imageCaption: string;
    };
  };
  ourStory: {
    title: string;
    description: SerializedEditorState;
  };
  therapeuticsIntro: {
    title: string;
    description: SerializedEditorState;
    image: Media;
    clinicalDevelopmentPrograms: {
      title: string;
      description: SerializedEditorState;
      pipelines: {
        iconBackgroundColor: string;
        icon: Media;
        title: string;
        description: SerializedEditorState;
      }[]
    };
    closingText: string;
  };
}
export interface LeadershipTeam {
  leadershipTeam: {
    title: string;
    description: SerializedEditorState;
    members: {
      name: string;
      title: string;
      image: Media;
      linkedinURL: string;
      bio: string;
    }[];
  }
}

export interface InvestorsPage {
  banner: {
    title: string;
    description: SerializedEditorState; 
    backgroundImage: Media; 
    CTA: {
      text: string;
      link?: string;
    };
  };
  investmentOpportunity: {
    title: string;
    description: SerializedEditorState;
    cardData: SerializedEditorState;
    marketNeeds: {
      title: string;
      image: Media;
      pointers: {
        title: string;
        description: string;
      }[];
    };
  };
  invest: {
    title: string;
    description: SerializedEditorState;
    cards: {
      icon: Media;
      title: string;
      description: SerializedEditorState;
    }[];
  };
  marketAnalysis: {
    title: string;
    description: SerializedEditorState;
    primaryCard: {
      title: string;
      description: SerializedEditorState;
      image: Media;
      feature: {
        title: string;
        text: string;
      }[];
    };
    secondaryCard: {
      icon: Media;
      title: string;
      point: {
        text: string;
      }[];
    }[];
  };
  technologyAndInnovation: {
    title: string;
    description: SerializedEditorState;
    card: {
      title: string;
      description: SerializedEditorState;
      image: Media;
    }[];
    card2: {
      title: string;
      description: SerializedEditorState;
      features: {
        icon: Media;
        title: string;
        description: SerializedEditorState;
      }[];
    };
  };
  corning: {
    title: string;
    cards: {
      title: string;
      description: SerializedEditorState;
    }[];
  };
  clinicalApplications: {
    title: string;
    description: SerializedEditorState;
    card: {
      title: string;
      description: SerializedEditorState;
      icon: Media;
      image: Media;
      stage: string;
      filing: string;
    }[];
    regulatoryStrategy: {
      title: string;
      description: SerializedEditorState;
      points: {
        text: string;
      }[];
    };
  };
  growthPath: {
    title: string;
    phases: {
      title: string;
      description: SerializedEditorState;
    }[];
    cta: {
      title: string;
      link: string;
    },
    mobileTimeline: {
      current: string;
      year1: string;
      year2: string;
    }
  };
  companyProfile: {
    title: string;
    description: SerializedEditorState;
    mission: {
      title: string;
      description: string;
    };
    mission2: {
      title: string;
      description: string;
    };
    companyHighlights: {
      title: string;
      highlights: {
        highlight: string;
      }[];
    };
    CTA: {
      text: string;
      link?: string;
    };
  };
}

export interface Footer {
  description: string;
  footerLinks: {
    label: string;
    link: string;
  }[];
  footerData: {
    address: string;
    number: string;
    mail: string;
  };
  socialMediasData: {
    icon: Media;
    socialMediaURL: string;
  }[];
}

declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}